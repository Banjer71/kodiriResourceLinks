{"version":3,"sources":["components/toggleSubSection.js","components/Section.js","components/Link.js","components/toggleLinks.js","components/Topic.js","serviceWorker.js","index.js","App.js"],"names":["toggleSubSection","id","week","document","getElementById","topics","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","classList","toggle","err","return","chevron","querySelector","Section","props","react_default","a","createElement","className","onClick","name","aria-hidden","children","resourceLink","href","text","toggleResourceLinks","i","resources","console","log","length","Topic","toggleLinks","parentId","index","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","components_Section","components_Topic","Link","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b950d86.chunk.js","sourcesContent":["function toggleSubSection(id) {\n\tlet week = document.getElementById(id);\n\tlet topics = week.querySelectorAll('.subSection');\n\tif (topics) {\n\t\tfor (const topic of topics) {\n\t\t\ttopic.classList.toggle('hidden')\n\t\t}\n\t}\n\tlet chevron = week.querySelector('.chevron');\n\tif (chevron) {\n\t\tchevron.classList.toggle('rotate-down');\n\t}\n}\n\nexport default toggleSubSection;","import React from 'react'\nimport '../index.css'\nimport toggleSubSection from './toggleSubSection'\n\nfunction Section(props) {\n\treturn (\n\t\t<div id={props.id}>\n\t\t\t<div className=\"section split\"  onClick={() => toggleSubSection(props.id)}>\n\t\t\t\t<h2>{props.name}</h2>\n\t\t\t\t<h2 className='chevron' aria-hidden=\"true\">></h2>\n\t\t\t</div>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\nexport default Section\n","import React from 'react'\n\nfunction resourceLink(props) {\n\treturn (\n\t\t<li>\n\t\t\t<h4><a href={props.href}>{props.text}</a></h4>\n\t\t</li>\n\t)\n}\n\nexport default resourceLink;\n","function toggleResourceLinks(id, i) {\n\tlet resources = document.getElementById(id)\n\t\t.querySelectorAll('.resourceLink');\n\t\tconsole.log(id)\n\tif (resources.length) {\n\t\tresources[i].classList.toggle('hidden');\n\t}\n\tlet topics = document.getElementById(id)\n\t\t.querySelectorAll('.subSection')\n\tif (topics[i]) {\n\t\ttopics[i].querySelector('.chevron')\n\t\t\t.classList.toggle('rotate-down')\n\t}\n}\n\nexport default toggleResourceLinks","import React from 'react'\nimport '../index.css'\nimport toggleLinks from './toggleLinks'\n\nfunction Topic(props) {\n\treturn (\n\t\t<ul className ='subSection hidden'>\n\t\t\t<li className=\"split\">\n\t\t\t\t<h3 onClick={() => toggleLinks(props.parentId, props.index)}>{props.name}</h3>\n\t\t\t\t<h3 className='chevron' aria-hidden='true'>></h3>\n\t\t\t</li>\n\t\t\t<ul className='resourceLink hidden wk1'>\n\t\t\t\t{props.children}\n\t\t\t</ul>\n\t\t</ul>\n\t)\n}\n\nexport default Topic;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Section from './components/Section'\nimport ResourceLink from './components/Link'\nimport Topic from './components/Topic'\nimport './index.css'\n\nexport default () => (\n  <>\n    <Section id='wk1' name='Week 1'>\n      <Topic parentId = 'wk1' name='Logical Operator Board Challenge' index='0'>\n        <ResourceLink text='Operator Precedence' href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence#Table'></ResourceLink>\n        <ResourceLink text='Chaining Logical Operators' href='https://www.javatpoint.com/javascript-operators'></ResourceLink>\n      </Topic>\n      <Topic name='Routing in React' parentId='wk1' index='1'>\n        <ResourceLink text='React-Router-DOM' href='https://reacttraining.com/react-router/'></ResourceLink>\n        <ResourceLink text='React-Router-DOM NPM' href='https://reacttraining.com/react-router/'></ResourceLink>\n      </Topic>\n    </Section>\n    <Section id='react' name='React'>\n      <Topic></Topic>\n    </Section>\n    \n    <Section id='testing' name='Testing'>\n    <Topic name='TDD' parentId='testing' index='0'></Topic>\n    <Topic name='Testing React Components' parentId='testing' index='1'></Topic>\n    <Topic name='Jest and Jasmine' parentId='testing' index='2'></Topic>\n    <Topic name='Enzyme' parentId='testing' index='3'></Topic>\n    </Section>\n    \n    <Section id='deployment' name='Deployment'/>\n    \n    <Section id='javascript' name='JavaScript'>\n    <Topic name='Online Documentation and Tutorials' parentId='javascript' index='0'>\n    <ResourceLink text='JavaScript.info' href=' https://javascript.info/'></ResourceLink>   \n    </Topic>\n    <Topic name='Books' parentId='javascript' index='1'></Topic>\n    <Topic name='YouTube Channels' parentId='javascript' index='2'></Topic>\n    <Topic name='Under the Hood' parentId='javascript' index='3'></Topic>\n\n    </Section>\n    <Section id='css' name='CSS'>\n      <Topic name='flexbox' parentId='css' index='0'>\n        <ResourceLink text='Flexbox Frogger' href=' https://javascript.info/'></ResourceLink>   \n      </Topic>\n    </Section>\n\n\n\n\n  </>\n);\n"],"sourceRoot":""}